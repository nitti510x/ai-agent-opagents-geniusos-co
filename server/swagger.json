{
  "openapi": "3.0.0",
  "info": {
    "title": "GeniusOS API",
    "description": "API for GeniusOS subscription plans and user management",
    "version": "1.0.0",
    "contact": {
      "email": "support@geniusos.co"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "plans",
      "description": "Subscription plan operations"
    },
    {
      "name": "subscriptions",
      "description": "User subscription operations"
    }
  ],
  "paths": {
    "/api/plans": {
      "get": {
        "tags": ["plans"],
        "summary": "Get all active subscription plans",
        "description": "Returns all active subscription plans ordered by price",
        "operationId": "getPlans",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/plans/{id}": {
      "get": {
        "tags": ["plans"],
        "summary": "Get plan by ID",
        "description": "Returns a single subscription plan by ID",
        "operationId": "getPlanById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the plan to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          },
          "404": {
            "description": "Plan not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions": {
      "get": {
        "tags": ["subscriptions"],
        "summary": "Get user's active subscription",
        "description": "Returns the user's active subscription",
        "operationId": "getUserSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["subscriptions"],
        "summary": "Create a new subscription",
        "description": "Creates a new subscription for the user",
        "operationId": "createSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Subscription object to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{id}/cancel": {
      "post": {
        "tags": ["subscriptions"],
        "summary": "Cancel a subscription",
        "description": "Cancels a subscription (sets cancel_at_period_end to true)",
        "operationId": "cancelSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the subscription to cancel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{id}/reactivate": {
      "post": {
        "tags": ["subscriptions"],
        "summary": "Reactivate a subscription",
        "description": "Reactivates a subscription (sets cancel_at_period_end to false)",
        "operationId": "reactivateSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the subscription to reactivate",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription reactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "plan_starter"
          },
          "name": {
            "type": "string",
            "example": "Starter 1"
          },
          "description": {
            "type": "string",
            "example": "Perfect for small teams getting started with AI marketing"
          },
          "stripe_product_id": {
            "type": "string",
            "example": "prod_starter"
          },
          "stripe_price_id": {
            "type": "string",
            "example": "price_starter_monthly"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 15.00
          },
          "interval": {
            "type": "string",
            "example": "month"
          },
          "features": {
            "type": "object",
            "example": {
              "icon": "assistant",
              "text": "1 AI Marketing Assistant",
              "feature_limits": {
                "agents": 2,
                "requests": 100,
                "channels": 5,
                "tokens": 1000
              }
            }
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sub_123456"
          },
          "user_id": {
            "type": "string",
            "example": "user_123456"
          },
          "plan_id": {
            "type": "string",
            "example": "plan_starter"
          },
          "status": {
            "type": "string",
            "example": "active",
            "enum": ["active", "canceled", "past_due", "unpaid", "trialing"]
          },
          "current_period_start": {
            "type": "string",
            "format": "date-time"
          },
          "current_period_end": {
            "type": "string",
            "format": "date-time"
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "example": false
          },
          "metadata": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscriptionInput": {
        "type": "object",
        "required": ["plan_id"],
        "properties": {
          "plan_id": {
            "type": "string",
            "example": "plan_starter"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Failed to fetch plans"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
