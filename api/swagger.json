{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Agents API",
    "description": "API for managing subscriptions and tokens for AI agents",
    "version": "1.0.0",
    "contact": {
      "email": "support@geniusos.co"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local development server"
    },
    {
      "url": "https://api.geniusos.co",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "subscriptions",
      "description": "Subscription management"
    },
    {
      "name": "tokens",
      "description": "Token management"
    },
    {
      "name": "plans",
      "description": "Subscription plans"
    }
  ],
  "paths": {
    "/api/subscriptions": {
      "post": {
        "tags": ["subscriptions"],
        "summary": "Create a new subscription",
        "description": "Creates a new subscription for a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/subscriptions/user/{userId}": {
      "get": {
        "tags": ["subscriptions"],
        "summary": "Get user's subscription",
        "description": "Returns the active subscription for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/cancel": {
      "put": {
        "tags": ["subscriptions"],
        "summary": "Cancel subscription",
        "description": "Sets cancel_at_period_end to true for a subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the subscription to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription canceled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/reactivate": {
      "put": {
        "tags": ["subscriptions"],
        "summary": "Reactivate subscription",
        "description": "Sets cancel_at_period_end to false for a subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the subscription to reactivate"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription reactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/plans": {
      "get": {
        "tags": ["plans"],
        "summary": "Get all plans",
        "description": "Returns all available subscription plans",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tokens/user/{userId}": {
      "get": {
        "tags": ["tokens"],
        "summary": "Get user's token balance",
        "description": "Returns the token balance, subscription details, and transaction history for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokens": {
                      "$ref": "#/components/schemas/UserTokens"
                    },
                    "subscription": {
                      "$ref": "#/components/schemas/Subscription"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TokenTransaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tokens/packages": {
      "get": {
        "tags": ["tokens"],
        "summary": "Get token packages",
        "description": "Returns all available token packages for purchase",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenPackage"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tokens/purchase": {
      "post": {
        "tags": ["tokens"],
        "summary": "Purchase tokens",
        "description": "Purchases a token package for a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenPurchase"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tokens purchased successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "$ref": "#/components/schemas/TokenTransaction"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/UserTokens"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "User must have an active subscription"
          },
          "404": {
            "description": "Token package not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tokens/use": {
      "post": {
        "tags": ["tokens"],
        "summary": "Use tokens",
        "description": "Deducts tokens from a user's balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens used successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "$ref": "#/components/schemas/TokenTransaction"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/UserTokens"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "402": {
            "description": "Insufficient tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "current_balance": {
                      "type": "integer"
                    },
                    "required": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "interval": {
            "type": "string",
            "enum": ["month", "year"]
          },
          "features": {
            "type": "object",
            "properties": {
              "feature_limits": {
                "type": "object",
                "properties": {
                  "agents": {
                    "type": "integer"
                  },
                  "requests": {
                    "type": "integer"
                  },
                  "channels": {
                    "type": ["string", "integer"]
                  },
                  "tokens": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "plan_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["active", "canceled", "past_due", "unpaid", "trialing"]
          },
          "current_period_start": {
            "type": "string",
            "format": "date-time"
          },
          "current_period_end": {
            "type": "string",
            "format": "date-time"
          },
          "cancel_at_period_end": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscriptionCreate": {
        "type": "object",
        "required": ["user_id", "plan_id"],
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "plan_id": {
            "type": "string"
          },
          "payment_method_id": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "UserTokens": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "balance": {
            "type": "integer"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TokenTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "integer"
          },
          "transaction_type": {
            "type": "string",
            "enum": ["purchase", "usage", "refund", "subscription_grant"]
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TokenPackage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "token_amount": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TokenPurchase": {
        "type": "object",
        "required": ["user_id", "package_id"],
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "package_id": {
            "type": "string"
          },
          "payment_method_id": {
            "type": "string"
          }
        }
      },
      "TokenUse": {
        "type": "object",
        "required": ["user_id", "amount"],
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "integer",
            "minimum": 1
          },
          "description": {
            "type": "string"
          }
        }
      }
    }
  }
}
